{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Purse","text":"<p>Purse is a fork of the default Roblox backpack which is decoupled from the CoreGui, allowing developers access to APIs that were previously unavailable and allowing for code modifications.</p> <ul> <li>Source code modification</li> <li>Developer APIs for controlling the inventory</li> <li>Not reliant on CoreGui permissions</li> </ul> <p></p> <p>What Purse is not is being a major improvement over the CoreGui backpack but a copy of it so that developers can iterate on it themselves. They are no additional features beyond what the CoreGui backpack provides.</p>"},{"location":"#notes","title":"Notes","text":"<p>Because we can't access the topbar without CoreGui, we use TopbarPlus. This is one of the major differences in terms of functionality. TopbarPlus may not be as familiar to use on consoles and VR.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>Purse unlocks APIs for the CoreGui backpack which were previously locked to other CoreGui scripts. To access the APIs, just require Purse like any other module script:</p> Toggle Inventory Example<pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n\nlocal Purse = require(ReplicatedStorage.Purse)\n\nPurse.OpenClose() -- Toggle the inventory\n</code></pre>"},{"location":"api-reference/#methods","title":"Methods","text":""},{"location":"api-reference/#openclose","title":"OpenClose","text":"<p>Toggles the backpack open/closed state. If the backpack is currently open, it will close it. If closed, it will open it.</p>"},{"location":"api-reference/#properties","title":"Properties","text":""},{"location":"api-reference/#ishotbarvisible","title":"IsHotbarVisible","text":"<p>Returns if the hotbar is currently visible to the player.</p>"},{"location":"api-reference/#returns","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#isopen","title":"IsOpen","text":"<p>Returns if the inventory is currently open to the player.</p>"},{"location":"api-reference/#returns_1","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#modulename","title":"ModuleName","text":"<p>Returns the module name. This will always return \"Backpack\".</p>"},{"location":"api-reference/#returns_2","title":"Returns","text":"<p>string</p>"},{"location":"api-reference/#keepvrtopbaropen","title":"KeepVRTopbarOpen","text":"<p>Returns <code>true</code>.</p>"},{"location":"api-reference/#returns_3","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#vrisexclusive","title":"VRIsExclusive","text":"<p>Returns <code>true</code>.</p>"},{"location":"api-reference/#returns_4","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#vrclosesnonexclusive","title":"VRClosesNonExclusive","text":"<p>Returns <code>true</code>.</p>"},{"location":"api-reference/#returns_5","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#isinventoryempty","title":"IsInventoryEmpty","text":"<p>Returns if the inventory is empty.</p>"},{"location":"api-reference/#returns_6","title":"Returns","text":"<p>boolean</p>"},{"location":"api-reference/#events","title":"Events","text":""},{"location":"api-reference/#statechanged","title":"StateChanged","text":"<p>Fires when the backpack is closed or opened.</p>"},{"location":"api-reference/#returns_7","title":"Returns","text":"<p>BindableEvent</p>"},{"location":"api-reference/#backpackempty","title":"BackpackEmpty","text":"<p>Fires when the inventory is empty.</p>"},{"location":"api-reference/#returns_8","title":"Returns","text":"<p>BindableEvent</p>"},{"location":"api-reference/#backpackitemadded","title":"BackpackItemAdded","text":"<p>Fires when a item is added to the inventory.</p>"},{"location":"api-reference/#returns_9","title":"Returns","text":"<p>BindableEvent</p>"},{"location":"api-reference/#backpackitemremoved","title":"BackpackItemRemoved","text":"<p>Fires when a item is removed from the inventory.</p>"},{"location":"api-reference/#returns_10","title":"Returns","text":"<p>BindableEvent</p>"},{"location":"philosophy/","title":"Philosophy","text":"<p>Purse is a sub project of Satchel, another backpack system designed to improve on Roblox's implementation. While both aim to be a backpack system, the design principles of each are different.</p> <p>The basic rundown is that Purse aims to be as close to the CoreGui while Satchel aims to be an improvement over the CoreGui.</p>"},{"location":"philosophy/#design-principles","title":"Design principles","text":"<ul> <li>As close to CoreGui as possible: Purse aims to be as similar to Roblox's CoreGui as possible so players barely notice the difference</li> <li>Sync with upstream: We document changes and keep track of any deviations from the CoreGui Backpack upstream which allows us to easily sync to the upstream.</li> <li>More APIs with documentation: Purse includes additional APIs beyond what the CoreGui Backpack provides, all thoroughly documented for developers.</li> </ul>"}]}