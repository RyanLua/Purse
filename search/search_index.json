{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Purse","text":"<p>Purse is a fork of the default Roblox backpack which is decoupled from the CoreGui, allowing creators access to APIs that were previously unavailable and allowing for code modifications.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>Purse unlocks APIs for the CoreGui backpack which were previously locked to other CoreGui scripts. To access the APIs, just require Purse like any other module script:</p> Toggle Inventory Example<pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal Purse = require(ReplicatedStorage:WaitForChild(\"Purse\"))\n\nPurse:OpenClose() -- Toggle the inventory\n</code></pre>"},{"location":"api-reference/#methods","title":"Methods","text":""},{"location":"api-reference/#openclose","title":"OpenClose","text":"<pre><code>BackpackScript:OpenClose() -&gt; nil\n</code></pre> <p>Toggles the backpack open/closed state. If the backpack is currently open, it will close it. If closed, it will open it.</p>"},{"location":"api-reference/#properties","title":"Properties","text":""},{"location":"api-reference/#ishotbarvisible","title":"IsHotbarVisible","text":"<pre><code>BackpackScript.IsHotbarVisible -&gt; boolean\n</code></pre> <p>Returns if the hotbar is currently visible to the player.</p>"},{"location":"api-reference/#isopen","title":"IsOpen","text":"<pre><code>BackpackScript.IsOpen -&gt; boolean\n</code></pre> <p>Returns if the inventory is currently open to the player.</p>"},{"location":"api-reference/#modulename","title":"ModuleName","text":"<pre><code>BackpackScript.ModuleName -&gt; string\n</code></pre> <p>Returns the module name. This will always return \"Backpack\".</p>"},{"location":"api-reference/#keepvrtopbaropen","title":"KeepVRTopbarOpen","text":"<pre><code>BackpackScript.KeepVRTopbarOpen -&gt; boolean\n</code></pre> <p>Returns <code>true</code>.</p>"},{"location":"api-reference/#vrisexclusive","title":"VRIsExclusive","text":"<pre><code>BackpackScript.VRIsExclusive -&gt; boolean\n</code></pre> <p>Returns <code>true</code>.</p>"},{"location":"api-reference/#vrclosesnonexclusive","title":"VRClosesNonExclusive","text":"<pre><code>BackpackScript.VRClosesNonExclusive -&gt; boolean\n</code></pre> <p>Returns <code>true</code>.</p>"},{"location":"api-reference/#isinventoryempty","title":"IsInventoryEmpty","text":"<pre><code>BackpackScript.IsInventoryEmpty -&gt; boolean\n</code></pre> <p>Returns if the inventory is empty.</p>"},{"location":"api-reference/#events","title":"Events","text":""},{"location":"api-reference/#statechanged","title":"StateChanged","text":"<pre><code>BackpackScript.StateChanged -&gt; BindableEvent\n</code></pre> <p>Fires when the backpack is closed or opened.</p>"},{"location":"api-reference/#backpackempty","title":"BackpackEmpty","text":"<pre><code>BackpackScript.BackpackEmpty -&gt; BindableEvent\n</code></pre> <p>Fires when the inventory is empty.</p>"},{"location":"api-reference/#backpackitemadded","title":"BackpackItemAdded","text":"<pre><code>BackpackScript.BackpackItemAdded -&gt; BindableEvent\n</code></pre> <p>Fires when a item is added to the inventory.</p>"},{"location":"api-reference/#backpackitemremoved","title":"BackpackItemRemoved","text":"<pre><code>BackpackScript.BackpackItemRemoved -&gt; BindableEvent\n</code></pre> <p>Fires when a item is removed from the inventory.</p>"},{"location":"philosophy/","title":"Philosophy","text":"<p>Purse is a sub project of Satchel, another backpack system designed to improve on Roblox's implementation. While both aim to be a backpack system, the design principles of each are different.</p> <p>The basic rundown is that Purse aims to be as close to the CoreGui while Satchel aims to be an improvement over the CoreGui.</p>"},{"location":"philosophy/#design-principles","title":"Design principles","text":"<ul> <li>As close to CoreGui as possible: Purse aims to be as similar to Roblox's CoreGui as possible so players barely notice the difference</li> <li>Sync with upstream: We document changes and keep track of any deviations from the CoreGui Backpack upstream which allows us to easily sync to the upstream.</li> <li>More APIs with documentation: Purse includes additional APIs beyond what the CoreGui Backpack provides, all thoroughly documented for developers.</li> </ul>"}]}